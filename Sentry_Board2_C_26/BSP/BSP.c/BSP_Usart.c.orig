#include "BSP_Usart.h"
#include "Omni_Chassis.h"

/***************用户数据声明****************/
void Send_Motor_Data(M2006s_t *M2006_Array);
void Usart_DMA_Receive_Init(void);

/******************接口声明*****************/
Usart_Fun_t Usart_Fun = Usart_FunGroundInit;
#undef Usart_FunGroundInit
Usart_Data_t Usart_Data = Usart_DataGroundInit;
#undef Usart_DataGroundInit

/**
  * @brief  显示当前速度数据
  * @param  M2006s_t结构体指针
  * @retval void
  */
void Send_Motor_Data(M2006s_t *M2006_Array)
{
	uint8_t message[30];
	
	sprintf((char *)message,"v1=%d v2=%d v3=%d v4=%d\r\n",
					M2006_Array[0].realSpeed,
					M2006_Array[1].realSpeed,
					M2006_Array[2].realSpeed,
					M2006_Array[3].realSpeed);
	HAL_UART_Transmit_DMA(&huart1, (uint8_t *)message, 
												strlen((const char *)message));
	//Usart1_Printf("v1=%d v2=%d v3=%d v4=%d\r\n",v1,v2,v3,v4);
}

/**
  * @brief  串口DMA接收初始化
  * @param  void
  * @retval void
  */
void Usart_DMA_Receive_Init()
{
	HAL_UARTEx_ReceiveToIdle_DMA(&huart1, Usart_Data.Usart1_Data,
															 Usart_DMA_Idle_Length);
	
}

/**
  * @brief  接收空闲回调
  * @param  void
  * @retval void
  */
void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart,uint16_t Size)
{
	if(huart->Instance == USART1)
	{
		HAL_UARTEx_ReceiveToIdle_DMA(huart, Usart_Data.Usart1_Data, 
																 Usart_DMA_Idle_Length);		// 再次开启DMA空闲中断
		
	}
}
